version: 2
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod download
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}'
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=1
      - >-
          {{- if eq .Os "darwin" }}
            {{- if eq .Arch "amd64"}}CC=zig cc -target x86_64-macos{{- end }}
            {{- if eq .Arch "arm64"}}CC=zig cc -target aarch64-macos{{- end }}
          {{- end }}
          {{- if eq .Os "windows" }}
            {{- if eq .Arch "amd64" }}CC=zig cc -target x86_64-windows-gnu{{- end }}
            {{- if eq .Arch "arm64"}}CC=zig cc -target aarch64-windows-gnu{{- end }}
          {{- end }}
      - >-
          {{- if eq .Os "darwin" }}
            {{- if eq .Arch "amd64"}}CXX=zig c++ -target x86_64-macos{{- end }}
            {{- if eq .Arch "arm64"}}CXX=zig c++ -target aarch64-macos{{- end }}
          {{- end }}
          {{- if eq .Os "windows" }}
            {{- if eq .Arch "amd64" }}CXX=zig c++ -target x86_64-windows-gnu{{- end }}
            {{- if eq .Arch "arm64"}}CXX=zig c++ -target aarch64-windows-gnu{{- end }}
          {{- end }}
      # FIXME: should work but doesnt
      # - CC_FOR_linux_amd64=zig cc -target x86_64-linux-gnu -mcpu=baseline
      # - CC_FOR_linux_arm64=zig cc -target aarch64-linux-gnu -mcpu=baseline
      # - CC_FOR_darwin_amd64=zig cc -target x86_64-macos-none
      # - CC_FOR_darwin_arm64=zig cc -target aarch64-macos-none
      # - CC_FOR_windows_amd64=zig cc -target x86_64-windows-gnu
      # - CC_FOR_windows_arm64=zig cc -target aarch64-windows-gnu
      # - CXX_FOR_linux_amd64=zig c++ -target x86_64-linux-gnu -mcpu=baseline
      # - CXX_FOR_linux_arm64=zig c++ -target aarch64-linux-gnu -mcpu=baseline
      # - CXX_FOR_darwin_amd64=zig c++ -target x86_64-macos-none
      # - CXX_FOR_darwin_arm64=zig c++ -target aarch64-macos-none
      # - CXX_FOR_windows_amd64=zig c++ -target x86_64-windows-gnu
      # - CXX_FOR_windows_arm64=zig c++ -target aarch64-windows-gnu
archives:
  - formats: [ 'zip' ]
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
signs:
  - artifacts: checksum
    args:
      # if you are using this is a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
release:
  # Visit your project's GitHub Releases page to publish this release.
  draft: false
changelog:
  disable: true
